/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
public:
    static bool my_compare(Interval& v1, Interval& v2) {
        return v1.start < v2.start;
    }
    vector<Interval> merge(vector<Interval>& intervals) {
        vector<Interval> res;
        if(intervals.size() == 0) return res;
        sort(intervals.begin(), intervals.end(), my_compare);
    
        Interval tmp(-1, -1);
        for(auto itr : intervals) {
            if(tmp.start == -1) {
                 tmp = itr;
            } else {
                 if(itr.start > tmp.end) {
                     res.push_back(tmp);
                     tmp = itr;
                 } else {
                     tmp.end = max(tmp.end, itr.end);
                 }
            }
        }
        res.push_back(tmp);
        return res;
    }
};
