class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int res = 0;
        int size = prices.size();
        if(size == 0) return 0;
        vector<vector<int>> dp(size, vector<int>(3, 0));
        vector<vector<int>> g_dp(size, vector<int>(3, 0));
        for(int i = 1; i <= 2; i++) {
            for(int j = 1; j < size; j++) {
                dp[j][i] = max(dp[j-1][i] + (prices[j] - prices[j-1]), g_dp[j-1][i-1] + (prices[j] - prices[j-1]));
                g_dp[j][i] = max(g_dp[j-1][i], dp[j][i]);
            }
        }
        return g_dp[size-1][2];
    }
};
