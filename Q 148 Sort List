/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* sortList(ListNode* head) {
        if(head == NULL || head->next == NULL)
            return head;
        ListNode* fast, *slow;
        fast = head;
        slow = head;
        while(fast->next != NULL && fast->next->next != NULL) {
            fast = fast->next->next;
            slow = slow->next;
        }
        fast = slow->next;
        slow->next = NULL;
        ListNode* left = sortList(head);
        ListNode* right = sortList(fast);
        ListNode* new_head = new ListNode(-1);
        ListNode* cur = new_head;
        
        while(left != NULL && right != NULL) {
             if(left->val < right->val) {
                    cur->next = left;
                    left = left->next;
             } else {
                    cur->next = right;
                    right = right->next;
                  
             }
             cur = cur->next;
        }
        cur->next = left == NULL ? right : left;

        return new_head->next;

    }
};
