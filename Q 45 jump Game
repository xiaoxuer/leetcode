class Solution {
public:
//this is a greedy algorithm 
    int jump(vector<int>& nums) {
        int size = nums.size();
        int end_idx = size - 1;
        int s_idx = 0;
        int min_hop = 1;
        int next_idx = 0, next = 0;
        if(size <= 1) return 0;
        
        if(nums[0] >= end_idx) return 1;
        while(nums[s_idx] + s_idx <= end_idx) {
            next = 0;
            for(int i = s_idx + 1; i <= (nums[s_idx] + s_idx); i++) { 
                if(nums[i] + i > next) {
                    next = nums[i] + i;
                    next_idx = i;
                    if(next >= end_idx) return min_hop + 1;
                }
            }
            s_idx = next_idx;
            min_hop++;
        }
        return min_hop + 1;
    }
};
