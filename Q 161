class Solution {
public:
    bool isOneEditDistance(string s, string t) {
        int s_len = s.length();
        int t_len = t.length();
        if(abs(s_len - t_len) > 1)
            return false;
        if(s == t) return false;
        vector<vector<int>> dp(2, vector<int>(t_len + 1, 0));
        dp[0][0] = 0;
        for(int i = 0; i < t_len; i++) {
            dp[0][i+1] = i + 1;
        }
        //since only two lines, need to init this part 
        dp[1][0] = 1;

        for(int i = 0; i < s_len; i++) {
            for(int j = 0; j < t_len; j++) {
                 dp[(i+1) % 2][j+1] = min(dp[i % 2][j+1] + 1, dp[(i+1) % 2][j] + 1);
                 if(s[i] == t[j])
                    dp[(i+1) % 2][j+1] = min(dp[(i+1) % 2][j+1], dp[i % 2][j]);
                 else
                    dp[(i+1) % 2][j+1] = min(dp[(i+1)% 2][j+1], dp[i % 2][j] + 1);
                    
               //  if(dp[(i+1) % 2][j+1] > 1 &&  return false;
            }
        }
        return dp[(s_len) % 2][t_len] == 1 ? true : false;
    }
};
