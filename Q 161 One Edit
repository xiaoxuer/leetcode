class Solution {
public:
    bool one_modify(string s, string t) {
        int cnt = 0;
        for(int i = 0; i < s.length(); i++) {
            if(s[i] != t[i] && cnt == 1) 
                return false;
            else if(s[i] != t[i]) 
                cnt = 1;
            else 
                continue;
        }
        return true;
    }
    
    bool one_delete(string s, string t) {
        int diff = 0;
        if(s.length() > t.length()) return one_delete(t, s);
        for(int i = 0; i < s.length(); i++) {
            if(s[i] != t[i]) return s.substr(i) == t.substr(i+1) ? true : false;
            else continue;
        }
        return true;
    }
    
    bool isOneEditDistance(string s, string t) {
        int s_len = s.length();
        int t_len = t.length();
        if(abs(s_len - t_len) >= 2) return false;
        if(s == t) return false;
        if(s_len == t_len) return one_modify(s, t);
        else return one_delete(s, t);
    }
};
