class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        vector<vector<int>> res(n, vector<int>(n, 0));
        int layer = n / 2;
        int cur = 1;
        int c_start, c_end;
        //similar to rotate image 90 degrees
        for(int i = 0; i < layer; i++) {
            c_start = i;
            c_end = n - 1 - i;
            for(int k = c_start; k < c_end; k++) 
                res[c_start][k] = cur++;
            for(int k = c_start; k < c_end; k++)
                res[k][c_end] = cur++;
            for(int k = c_end; k > c_start; k--)
                res[c_end][k] = cur++;
            for(int k = c_end; k > c_start; k--)
                res[k][c_start] =  cur++;
        }
        //dealing with even and odd cases 
        if(n % 2) {
             res[layer][layer] = cur;
        }
        return res;
    }
};
