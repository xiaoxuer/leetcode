/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root, TreeNode*& n1, TreeNode*& n2, TreeNode*& prev) {
            if(root == NULL) return;
            helper(root->left, n1, n2, prev);
            if(prev != NULL && prev->val > root->val) {
                if(n1 == NULL) n1 = prev;
                n2 = root;
            }
            prev = root;
            helper(root->right, n1, n2, prev);
    }
    void recoverTree(TreeNode* root) {
        TreeNode* n1 = NULL;
        TreeNode* n2 = NULL;
        TreeNode* prev = NULL;
        if(root == NULL) return;
        helper(root, n1, n2, prev);
        int tmp = n1->val;
        n1->val = n2->val;
        n2->val= tmp;
    }
};
