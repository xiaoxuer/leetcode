class Queue {
private: 
    stack<int> sta1;
    stack<int> sta2;

public:
    Queue() {
        while(!sta1.empty()) sta1.pop();
        while(!sta2.empty()) sta2.pop();
    }
    // Push element x to the back of queue.
    void push(int x) {
        sta2.push(x);
    }

    // Removes the element from in front of queue.
    void pop(void) {
        if(!sta1.empty()) sta1.pop();
        else {
            while(!sta2.empty()) {
                sta1.push(sta2.top());
                sta2.pop();
            }
            sta1.pop();
        }
    }

    // Get the front element.
    int peek(void) {
        if(empty()) return -1;
        else if(!sta1.empty()) return sta1.top();
        else { 
            while(!sta2.empty()) {
                sta1.push(sta2.top());
                sta2.pop();
            }
            return sta1.top();
        }
    }

    // Return whether the queue is empty.
    bool empty(void) {
        return sta1.empty() && sta2.empty()  ? true : false;
    }
};
